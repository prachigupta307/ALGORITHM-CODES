void dfs(vector<int> A[],int i,int j,int N)
{ 
    int R[]={-1,1,0,0,-1,-1,1,1};
    int C[]={0,0,-1,1,-1,1,-1,1};
    if(i>=0 and i<N and j>=0 and j<A[0].size() and A[i][j]==1)
    {
        A[i][j]=0;
        for(int p=0;p<8;p++)
        {
            dfs(A,i+R[p],j+C[p],N);
        }
    }
}
int findIslands(vector<int> A[], int N, int M) 
{
    int max=0;
   for(int i=0;i<N;i++)
   {
       for(int j=0;j<M;j++)
       {   
           if(A[i][j]==1)
           {
               max++;
               dfs(A,i,j,N);
           }
       }
   }
   return max;
}
